global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        # An alternative list with additional directives can be obtained from
        #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

frontend http_front
        bind *:80
        stats uri /haproxy?stats
        default_backend http_back

backend http_back
        balance roundrobin
        server k8-node 192.168.50.10:80 check
        server node-1 192.168.50.11:80 check
        server node-2 192.168.50.12:80 check

frontend kubernetes
        bind *:6443
        option tcplog
        mode tcp
        default_backend kubernetes-master-nodes


backend kubernetes-master-nodes
        mode tcp
        balance roundrobin
        option tcp-check
        server k8-master1 192.168.50.11:6443 check
        server k8-master2 192.168.50.12:6443 check

frontend kubernetesetcd1
        bind *:2379
        option tcplog
        mode tcp
        default_backend kubernetes-etcd1


backend kubernetes-etcd1
        mode tcp
        balance roundrobin
        option tcp-check
        server k8-master1 192.168.50.11:2379 check
        server k8-master2 192.168.50.12:2379 check

frontend kubernetesetcd2
        bind *:2380
        option tcplog
        mode tcp
        default_backend kubernetes-etcd2


backend kubernetes-etcd2
        mode tcp
        balance roundrobin
        option tcp-check
        server k8-master1 192.168.50.11:2380 check
        server k8-master2 192.168.50.12:2380 check

frontend kuberneteskubelet
        bind *:10250
        option tcplog
        mode tcp
        default_backend kubernetes-kubelet


backend kubernetes-kubelet
        mode tcp
        balance roundrobin
        option tcp-check
        server k8-master1 192.168.50.11:10250 check
        server k8-master2 192.168.50.12:10250 check


frontend kubernetesscheduler
        bind *:10251
        option tcplog
        mode tcp
        default_backend kubernetes-scheduler


backend kubernetes-scheduler
        mode tcp
        balance roundrobin
        option tcp-check
        server k8-master1 192.168.50.11:10251 check
        server k8-master2 192.168.50.12:10251 check

frontend kubernetescontroller
        bind *:10252
        option tcplog
        mode tcp
        default_backend kubernetes-controller


backend kubernetes-controller
        mode tcp
        balance roundrobin
        option tcp-check
        server k8-master1 192.168.50.11:10252 check
        server k8-master2 192.168.50.12:10252 check